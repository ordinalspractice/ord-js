{
  "methods": [
    {
      "name": "getAddressInfo",
      "description": "Retrieves information about a specific address including its outputs, inscriptions, and rune balances.",
      "parameters": [
        {
          "name": "address",
          "type": "string",
          "description": "Bitcoin address to query."
        }
      ],
      "endpoint": "/address/{address}",
      "httpMethod": "GET",
      "returnType": "Promise<AddressInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockCount",
      "description": "Retrieves the total number of blocks in the blockchain.",
      "parameters": [],
      "endpoint": "/blockcount",
      "httpMethod": "GET",
      "returnType": "Promise<number>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockHash",
      "description": "Gets the hash of the latest block.",
      "parameters": [],
      "endpoint": "/blockhash",
      "httpMethod": "GET",
      "returnType": "Promise<BlockHash>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockHashByHeight",
      "description": "Gets the hash of a block at the specified height.",
      "parameters": [
        {
          "name": "height",
          "type": "number",
          "description": "Block height to get hash for"
        }
      ],
      "endpoint": "/blockhash/{height}",
      "httpMethod": "GET",
      "returnType": "Promise<BlockHash>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockHashByHeightRecursive",
      "description": "Gets the block hash using the recursive endpoint.",
      "parameters": [
        {
          "name": "height",
          "type": "number",
          "description": "Block height"
        }
      ],
      "endpoint": "/r/blockhash/{height}",
      "httpMethod": "GET",
      "returnType": "Promise<BlockHash>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockHashRecursive",
      "description": "Gets the latest block hash using the recursive endpoint.",
      "parameters": [],
      "endpoint": "/r/blockhash",
      "httpMethod": "GET",
      "returnType": "Promise<BlockHash>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockHeight",
      "description": "Gets the height of the latest block.",
      "parameters": [],
      "endpoint": "/blockheight",
      "httpMethod": "GET",
      "returnType": "Promise<number>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockHeightRecursive",
      "description": "Gets the latest block height using the recursive endpoint.",
      "parameters": [],
      "endpoint": "/r/blockheight",
      "httpMethod": "GET",
      "returnType": "Promise<number>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockInfo",
      "description": "Fetches details about a specific block by its height or hash.",
      "parameters": [
        {
          "name": "heightOrHash",
          "type": "any",
          "description": "Block height (number) or block hash (string)."
        }
      ],
      "endpoint": "/block/{heightOrHash}",
      "httpMethod": "GET",
      "returnType": "Promise<BlockInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockInfoRecursive",
      "description": "Gets detailed block information using the recursive endpoint.",
      "parameters": [
        {
          "name": "heightOrHash",
          "type": "string | number",
          "description": "Block height or hash"
        }
      ],
      "endpoint": "/r/blockinfo/{heightOrHash}",
      "httpMethod": "GET",
      "returnType": "Promise<BlockDetails>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlocksLatest",
      "description": "Returns the height of the latest block, the blockhashes of the last 100 blocks, and featured inscriptions from them.",
      "parameters": [],
      "endpoint": "/blocks",
      "httpMethod": "GET",
      "returnType": "Promise<BlocksResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockTime",
      "description": "Gets the timestamp of the latest block.",
      "parameters": [],
      "endpoint": "/blocktime",
      "httpMethod": "GET",
      "returnType": "Promise<number>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getBlockTimeRecursive",
      "description": "Gets block time using the recursive endpoint.",
      "parameters": [],
      "endpoint": "/r/blocktime",
      "httpMethod": "GET",
      "returnType": "Promise<number>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getChild",
      "description": "Gets a specific child inscription of a parent inscription.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Parent inscription ID"
        },
        {
          "name": "child",
          "type": "number",
          "description": "Index of the child inscription"
        }
      ],
      "endpoint": "/inscription/{id}/{child}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getChildren",
      "description": "Gets first 100 child inscriptions IDs.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Parent inscription ID"
        }
      ],
      "endpoint": "/r/children/{id}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsIDsResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getChildrenByPage",
      "description": "Gets paginated child inscription IDs.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Parent inscription ID"
        },
        {
          "name": "page",
          "type": "number",
          "description": "Page number"
        }
      ],
      "endpoint": "/r/children/{id}/{page}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsIDsResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getChildrenInfo",
      "description": "Gets details of the first 100 child inscriptions.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Parent inscription ID"
        }
      ],
      "endpoint": "/r/children/{id}/inscriptions",
      "httpMethod": "GET",
      "returnType": "Promise<ChildrenInfoResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getChildrenInfoByPage",
      "description": "Gets paginated detailed child inscription information.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Parent inscription ID"
        },
        {
          "name": "page",
          "type": "number",
          "description": "Page number"
        }
      ],
      "endpoint": "/r/children/{id}/inscriptions/{page}",
      "httpMethod": "GET",
      "returnType": "Promise<ChildrenInfoResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionInfo",
      "description": "Retrieves information about a specific inscription by its ID.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Inscription ID"
        }
      ],
      "endpoint": "/inscription/{id}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionOnSat",
      "description": "Gets ID of a specific inscription at an index by sat number. The inscription id at index of all inscriptions on a sat. Index may be a negative number to index from the back. 0 being the first and -1 being the most recent for example. Requires index with --index-sats flag.",
      "parameters": [
        {
          "name": "number",
          "type": "number",
          "description": "Satoshi number"
        },
        {
          "name": "index",
          "type": "number",
          "description": "Inscription index"
        }
      ],
      "endpoint": "/r/sat/{number}/at/{index}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionID>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionRecursive",
      "description": "Gets recursive inscription information.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Inscription ID"
        }
      ],
      "endpoint": "/r/inscription/{id}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionRecursive>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptions",
      "description": "Gets a list of the 100 most recent inscriptions.",
      "parameters": [],
      "endpoint": "/inscriptions",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionsByBlock",
      "description": "Gets all inscriptions in a specific block.",
      "parameters": [
        {
          "name": "height",
          "type": "number",
          "description": "Block height to fetch inscriptions from"
        }
      ],
      "endpoint": "/inscriptions/block/{height}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionsByIds",
      "description": "Retrieves information about multiple inscriptions by their IDs.",
      "parameters": [
        {
          "name": "ids",
          "type": "string[]",
          "description": "Array of inscription IDs to fetch"
        }
      ],
      "endpoint": "/inscriptions",
      "httpMethod": "POST",
      "returnType": "Promise<InscriptionInfo[]>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionsByPage",
      "description": "Gets inscriptions for a specific page number in paginated results.",
      "parameters": [
        {
          "name": "page",
          "type": "number",
          "description": "Page number to fetch"
        }
      ],
      "endpoint": "/inscriptions/{page}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionsOnSat",
      "description": "Gets the first 100 inscription ids on a sat. Requires index with --index-sats flag.",
      "parameters": [
        {
          "name": "number",
          "type": "number",
          "description": "Satoshi number"
        }
      ],
      "endpoint": "/r/sat/{number}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsIDsResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getInscriptionsOnSatByPage",
      "description": "Gets paginated inscription ids for a specific satoshi.",
      "parameters": [
        {
          "name": "number",
          "type": "number",
          "description": "Satoshi number"
        },
        {
          "name": "page",
          "type": "number",
          "description": "Page number"
        }
      ],
      "endpoint": "/r/sat/{number}/{page}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsIDsResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getOutput",
      "description": "Retrieves information about a specific UTXO.",
      "parameters": [
        {
          "name": "outpoint",
          "type": "string",
          "description": "Transaction outpoint in format {txid}:{vout}"
        }
      ],
      "endpoint": "/output/{outpoint}",
      "httpMethod": "GET",
      "returnType": "Promise<OutputInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getOutputAssets",
      "description": "Gets assets held by an UTXO.",
      "parameters": [
        {
          "name": "outpoint",
          "type": "string",
          "description": "Transaction outpoint"
        }
      ],
      "endpoint": "/r/utxo/{outpoint}",
      "httpMethod": "GET",
      "returnType": "Promise<OutputAssets>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getOutputs",
      "description": "Gets information about multiple UTXOs.",
      "parameters": [
        {
          "name": "outpoints",
          "type": "string[]",
          "description": "Array of outpoints to fetch"
        }
      ],
      "endpoint": "/outputs",
      "httpMethod": "POST",
      "returnType": "Promise<OutputInfo[]>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getOutputsByAddress",
      "description": "Gets all UTXOs for a specific address, optionally filtered by type.",
      "parameters": [
        {
          "name": "address",
          "type": "string",
          "description": "Bitcoin address to get outputs for"
        },
        {
          "name": "type",
          "type": "OutputType",
          "description": "Optional filter for specific output types"
        }
      ],
      "endpoint": "/outputs/{address}",
      "httpMethod": "GET",
      "returnType": "Promise<OutputInfo[]>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getParents",
      "description": "Gets parent inscription IDs.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Child inscription ID"
        }
      ],
      "endpoint": "/r/parents/{id}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getParentsByPage",
      "description": "Gets paginated parent inscription IDs.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "description": "Child inscription ID"
        },
        {
          "name": "page",
          "type": "number",
          "description": "Page number"
        }
      ],
      "endpoint": "/r/parents/{id}/{page}",
      "httpMethod": "GET",
      "returnType": "Promise<InscriptionsResponse>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getRune",
      "description": "Gets information about a specific rune by name.",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "description": "Rune name"
        }
      ],
      "endpoint": "/rune/{name}",
      "httpMethod": "GET",
      "returnType": "Promise<RuneResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getRunesByPage",
      "description": "Gets runes for a specific page number in paginated results.",
      "parameters": [
        {
          "name": "page",
          "type": "number",
          "description": "Page number to fetch"
        }
      ],
      "endpoint": "/runes/{page}",
      "httpMethod": "GET",
      "returnType": "Promise<RunesResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getRunesLatest",
      "description": "Gets a list of the 100 most recent runes.",
      "parameters": [],
      "endpoint": "/runes",
      "httpMethod": "GET",
      "returnType": "Promise<RunesResponse>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getSat",
      "description": "Gets information about a specific satoshi by its number.",
      "parameters": [
        {
          "name": "number",
          "type": "number",
          "description": "Satoshi number"
        }
      ],
      "endpoint": "/sat/{number}",
      "httpMethod": "GET",
      "returnType": "Promise<SatInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getServerStatus",
      "description": "Gets the current server status and information.",
      "parameters": [],
      "endpoint": "/status",
      "httpMethod": "GET",
      "returnType": "Promise<ServerStatus>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getTransaction",
      "description": "Gets information about a specific transaction.",
      "parameters": [
        {
          "name": "txId",
          "type": "string",
          "description": "Transaction ID"
        }
      ],
      "endpoint": "/tx/{txId}",
      "httpMethod": "GET",
      "returnType": "Promise<TransactionInfo>",
      "recursive": false,
      "sourceFile": "src/client.ts"
    },
    {
      "name": "getTransactionHex",
      "description": "Gets hex transaction data.",
      "parameters": [
        {
          "name": "txid",
          "type": "string",
          "description": "Transaction ID"
        }
      ],
      "endpoint": "/r/tx/{txid}",
      "httpMethod": "GET",
      "returnType": "Promise<TransactionHex>",
      "recursive": true,
      "sourceFile": "src/client.ts"
    }
  ],
  "types": [
    {
      "name": "AddressInfo",
      "kind": "object",
      "description": "Comprehensive information about a Bitcoin address including its balance, outputs, inscriptions, and runes balances.",
      "properties": [
        {
          "name": "inscriptions",
          "type": "string[] | null",
          "description": ""
        },
        {
          "name": "outputs",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "runes_balances",
          "type": "string[][] | null",
          "description": ""
        },
        {
          "name": "sat_balance",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/address.ts"
    },
    {
      "name": "BlockDetails",
      "kind": "object",
      "description": "Detailed information about given block.",
      "properties": [
        {
          "name": "average_fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "average_fee_rate",
          "type": "number",
          "description": ""
        },
        {
          "name": "bits",
          "type": "number",
          "description": ""
        },
        {
          "name": "chainwork",
          "type": "string",
          "description": ""
        },
        {
          "name": "confirmations",
          "type": "number",
          "description": ""
        },
        {
          "name": "difficulty",
          "type": "number",
          "description": ""
        },
        {
          "name": "feerate_percentiles",
          "type": "number[]",
          "description": ""
        },
        {
          "name": "hash",
          "type": "BlockHash",
          "description": ""
        },
        {
          "name": "height",
          "type": "number",
          "description": ""
        },
        {
          "name": "max_fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "max_fee_rate",
          "type": "number",
          "description": ""
        },
        {
          "name": "max_tx_size",
          "type": "number",
          "description": ""
        },
        {
          "name": "median_fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "median_time",
          "type": "number | null",
          "description": ""
        },
        {
          "name": "merkle_root",
          "type": "string",
          "description": ""
        },
        {
          "name": "min_fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "min_fee_rate",
          "type": "number",
          "description": ""
        },
        {
          "name": "next_block",
          "type": "BlockHash | null",
          "description": ""
        },
        {
          "name": "nonce",
          "type": "number",
          "description": ""
        },
        {
          "name": "previous_block",
          "type": "BlockHash | null",
          "description": ""
        },
        {
          "name": "subsidy",
          "type": "number",
          "description": ""
        },
        {
          "name": "target",
          "type": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "type": "number",
          "description": ""
        },
        {
          "name": "total_fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "total_size",
          "type": "number",
          "description": ""
        },
        {
          "name": "total_weight",
          "type": "number",
          "description": ""
        },
        {
          "name": "transaction_count",
          "type": "number",
          "description": ""
        },
        {
          "name": "version",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/block.ts"
    },
    {
      "name": "BlockInfo",
      "kind": "object",
      "description": "Basic block information including inscriptions and runes.",
      "properties": [
        {
          "name": "best_height",
          "type": "number",
          "description": ""
        },
        {
          "name": "hash",
          "type": "BlockHash",
          "description": ""
        },
        {
          "name": "height",
          "type": "number",
          "description": ""
        },
        {
          "name": "inscriptions",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "runes",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "target",
          "type": "string",
          "description": ""
        },
        {
          "name": "transactions",
          "type": "Transaction[]",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/block.ts"
    },
    {
      "name": "BlocksResponse",
      "kind": "object",
      "description": "Paginated response containing a list of recent blocks and metadata.",
      "properties": [
        {
          "name": "blocks",
          "type": "BlockHash[]",
          "description": ""
        },
        {
          "name": "featured_blocks",
          "type": "Record<BlockHash, string[]>",
          "description": ""
        },
        {
          "name": "last",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/block.ts"
    },
    {
      "name": "CharmType",
      "kind": "enum",
      "description": "Special characteristics or properties of a sat (e.g. \"cursed\", \"epic\", \"burned\").",
      "values": [
        "burned",
        "coin",
        "cursed",
        "epic",
        "legendary",
        "lost",
        "mythic",
        "nineball",
        "palindrome",
        "rare",
        "reinscription",
        "unbound",
        "uncommon",
        "vindicated"
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "ChildInfo",
      "kind": "object",
      "description": "Child inscription info retrieved from recursive endpoint.",
      "properties": [
        {
          "name": "charms",
          "type": "CharmType[]",
          "description": ""
        },
        {
          "name": "fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "height",
          "type": "number",
          "description": ""
        },
        {
          "name": "id",
          "type": "string",
          "description": ""
        },
        {
          "name": "number",
          "type": "number",
          "description": ""
        },
        {
          "name": "output",
          "type": "string",
          "description": ""
        },
        {
          "name": "sat",
          "type": "number",
          "description": ""
        },
        {
          "name": "satpoint",
          "type": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "ChildrenInfoResponse",
      "kind": "object",
      "description": "Paginated response containing child inscriptions detailed info.",
      "properties": [
        {
          "name": "children",
          "type": "ChildInfo[]",
          "description": ""
        },
        {
          "name": "more",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "page",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "Input",
      "kind": "object",
      "description": "Transaction input containing previous output reference and witness data.",
      "properties": [
        {
          "name": "previous_output",
          "type": "string",
          "description": ""
        },
        {
          "name": "script_sig",
          "type": "string",
          "description": ""
        },
        {
          "name": "sequence",
          "type": "number",
          "description": ""
        },
        {
          "name": "witness",
          "type": "string[]",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/transaction.ts"
    },
    {
      "name": "InscriptionID",
      "kind": "object",
      "description": "Response containing a single inscription ID.",
      "properties": [
        {
          "name": "id",
          "type": "string | null",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "InscriptionInfo",
      "kind": "object",
      "description": "Comprehensive information about an inscription including its content type, genesis data, location and transfer history.",
      "properties": [
        {
          "name": "address",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "charms",
          "type": "CharmType[]",
          "description": ""
        },
        {
          "name": "child_count",
          "type": "number",
          "description": ""
        },
        {
          "name": "children",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "content_length",
          "type": "number | null",
          "description": ""
        },
        {
          "name": "content_type",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "effective_content_type",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "height",
          "type": "number",
          "description": ""
        },
        {
          "name": "id",
          "type": "string",
          "description": ""
        },
        {
          "name": "metaprotocol",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "next",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "number",
          "type": "number",
          "description": ""
        },
        {
          "name": "parents",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "previous",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "rune",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "sat",
          "type": "number | null",
          "description": ""
        },
        {
          "name": "satpoint",
          "type": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "type": "number",
          "description": ""
        },
        {
          "name": "value",
          "type": "number | null",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "InscriptionRecursive",
      "kind": "object",
      "description": "Comprehensive information about an inscription retrieved from recursive endpoint.",
      "properties": [
        {
          "name": "address",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "charms",
          "type": "CharmType[]",
          "description": ""
        },
        {
          "name": "content_length",
          "type": "number | null",
          "description": ""
        },
        {
          "name": "content_type",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "delegate",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "fee",
          "type": "number",
          "description": ""
        },
        {
          "name": "height",
          "type": "number",
          "description": ""
        },
        {
          "name": "id",
          "type": "string",
          "description": ""
        },
        {
          "name": "number",
          "type": "number",
          "description": ""
        },
        {
          "name": "output",
          "type": "string",
          "description": ""
        },
        {
          "name": "sat",
          "type": "number | null",
          "description": ""
        },
        {
          "name": "satpoint",
          "type": "string",
          "description": ""
        },
        {
          "name": "timestamp",
          "type": "number",
          "description": ""
        },
        {
          "name": "value",
          "type": "number | null",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "InscriptionsIDsResponse",
      "kind": "object",
      "description": "Paginated response containing a list of inscription IDs",
      "properties": [
        {
          "name": "ids",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "more",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "page",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "InscriptionsResponse",
      "kind": "object",
      "description": "Paginated response containing a list of inscriptions IDs.",
      "properties": [
        {
          "name": "ids",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "more",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "page_index",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/inscription.ts"
    },
    {
      "name": "Output",
      "kind": "object",
      "description": "Transaction output containing value and script pubkey.",
      "properties": [
        {
          "name": "script_pubkey",
          "type": "string",
          "description": ""
        },
        {
          "name": "value",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/transaction.ts"
    },
    {
      "name": "OutputAssets",
      "kind": "object",
      "description": "Information about assets held by an UTXO.",
      "properties": [
        {
          "name": "inscriptions",
          "type": "string[] | null",
          "description": ""
        },
        {
          "name": "runes",
          "type": "Record<string, RuneBalance> | null",
          "description": ""
        },
        {
          "name": "sat_ranges",
          "type": "SatRange[] | null",
          "description": ""
        },
        {
          "name": "value",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/output.ts"
    },
    {
      "name": "OutputInfo",
      "kind": "object",
      "description": "Detailed information about a UTXO including value, script type, and any inscriptions or runes it contains.",
      "properties": [
        {
          "name": "address",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "indexed",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "inscriptions",
          "type": "string[] | null",
          "description": ""
        },
        {
          "name": "outpoint",
          "type": "string",
          "description": ""
        },
        {
          "name": "runes",
          "type": "Record<string, RuneBalance> | null",
          "description": ""
        },
        {
          "name": "sat_ranges",
          "type": "SatRange[] | null",
          "description": ""
        },
        {
          "name": "script_pubkey",
          "type": "string",
          "description": ""
        },
        {
          "name": "spent",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "transaction",
          "type": "string",
          "description": ""
        },
        {
          "name": "value",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/output.ts"
    },
    {
      "name": "OutputType",
      "kind": "enum",
      "description": "Type of UTXO output (e.g. \"plain\", \"inscription\", \"rune\").",
      "values": [
        "any",
        "cardinal",
        "inscribed",
        "runic"
      ],
      "sourceFile": "src/schemas/output.ts"
    },
    {
      "name": "RarityType",
      "kind": "enum",
      "description": "Classification of sat rarity (e.g. \"common\", \"uncommon\", \"rare\", \"epic\", \"legendary\").",
      "values": [
        "common",
        "epic",
        "legendary",
        "mythic",
        "rare",
        "uncommon"
      ],
      "sourceFile": "src/schemas/sat.ts"
    },
    {
      "name": "RuneBalance",
      "kind": "object",
      "description": "Basic information about a rune held by an UTXO.",
      "properties": [
        {
          "name": "amount",
          "type": "number",
          "description": ""
        },
        {
          "name": "divisibility",
          "type": "number",
          "description": ""
        },
        {
          "name": "symbol",
          "type": "string",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/rune.ts"
    },
    {
      "name": "RuneInfo",
      "kind": "object",
      "description": "Basic information about a rune including its symbol and supply details.",
      "properties": [
        {
          "name": "block",
          "type": "number",
          "description": ""
        },
        {
          "name": "burned",
          "type": "number",
          "description": ""
        },
        {
          "name": "divisibility",
          "type": "number",
          "description": ""
        },
        {
          "name": "etching",
          "type": "string",
          "description": ""
        },
        {
          "name": "mints",
          "type": "number",
          "description": ""
        },
        {
          "name": "number",
          "type": "number",
          "description": ""
        },
        {
          "name": "premine",
          "type": "number",
          "description": ""
        },
        {
          "name": "spaced_rune",
          "type": "string",
          "description": ""
        },
        {
          "name": "symbol",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "terms",
          "type": "RuneTerms",
          "description": ""
        },
        {
          "name": "timestamp",
          "type": "number",
          "description": ""
        },
        {
          "name": "turbo",
          "type": "boolean",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/rune.ts"
    },
    {
      "name": "RuneResponse",
      "kind": "object",
      "description": "Detailed rune information including minting status and parent.",
      "properties": [
        {
          "name": "entry",
          "type": "RuneInfo",
          "description": ""
        },
        {
          "name": "id",
          "type": "string",
          "description": ""
        },
        {
          "name": "mintable",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "parent",
          "type": "string | null",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/rune.ts"
    },
    {
      "name": "RunesResponse",
      "kind": "object",
      "description": "Paginated response containing a list of runes and metadata.",
      "properties": [
        {
          "name": "entries",
          "type": "[string, RuneInfo][]",
          "description": ""
        },
        {
          "name": "more",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "next",
          "type": "number | null",
          "description": ""
        },
        {
          "name": "prev",
          "type": "number | null",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/rune.ts"
    },
    {
      "name": "SatInfo",
      "kind": "object",
      "description": "Information about a specific satoshi including its number, timestamp, and rarity classification.",
      "properties": [
        {
          "name": "address",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "block",
          "type": "number",
          "description": ""
        },
        {
          "name": "charms",
          "type": "CharmType[]",
          "description": ""
        },
        {
          "name": "cycle",
          "type": "number",
          "description": ""
        },
        {
          "name": "decimal",
          "type": "string",
          "description": ""
        },
        {
          "name": "degree",
          "type": "string",
          "description": ""
        },
        {
          "name": "epoch",
          "type": "number",
          "description": ""
        },
        {
          "name": "inscriptions",
          "type": "string[]",
          "description": ""
        },
        {
          "name": "name",
          "type": "string",
          "description": ""
        },
        {
          "name": "number",
          "type": "number",
          "description": ""
        },
        {
          "name": "offset",
          "type": "number",
          "description": ""
        },
        {
          "name": "percentile",
          "type": "string",
          "description": ""
        },
        {
          "name": "period",
          "type": "number",
          "description": ""
        },
        {
          "name": "rarity",
          "type": "RarityType",
          "description": ""
        },
        {
          "name": "satpoint",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "timestamp",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/sat.ts"
    },
    {
      "name": "ServerStatus",
      "kind": "object",
      "description": "Current status information about the ordinals server including version, height and indexing progress.",
      "properties": [
        {
          "name": "address_index",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "blessed_inscriptions",
          "type": "number",
          "description": ""
        },
        {
          "name": "chain",
          "type": "string",
          "description": ""
        },
        {
          "name": "cursed_inscriptions",
          "type": "number",
          "description": ""
        },
        {
          "name": "height",
          "type": "number",
          "description": ""
        },
        {
          "name": "initial_sync_time",
          "type": "Time",
          "description": ""
        },
        {
          "name": "inscriptions",
          "type": "number",
          "description": ""
        },
        {
          "name": "lost_sats",
          "type": "number",
          "description": ""
        },
        {
          "name": "minimum_rune_for_next_block",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "rune_index",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "runes",
          "type": "number",
          "description": ""
        },
        {
          "name": "sat_index",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "started",
          "type": "string",
          "description": ""
        },
        {
          "name": "transaction_index",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "unrecoverably_reorged",
          "type": "boolean",
          "description": ""
        },
        {
          "name": "uptime",
          "type": "Time",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/status.ts"
    },
    {
      "name": "Time",
      "kind": "object",
      "description": "Type defined in src/schemas/status.ts",
      "properties": [
        {
          "name": "nanos",
          "type": "number",
          "description": ""
        },
        {
          "name": "secs",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "src/schemas/status.ts"
    },
    {
      "name": "Transaction",
      "kind": "object",
      "description": "Bitcoin transaction data including version, locktime, inputs and outputs.",
      "properties": [
        {
          "name": "input",
          "type": "Input[]",
          "description": ""
        },
        {
          "name": "lock_time",
          "type": "number",
          "description": ""
        },
        {
          "name": "output",
          "type": "Output[]",
          "description": ""
        },
        {
          "name": "version",
          "type": "number",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/transaction.ts"
    },
    {
      "name": "TransactionInfo",
      "kind": "object",
      "description": "Extended transaction information including block details, timestamp and inscription data.",
      "properties": [
        {
          "name": "chain",
          "type": "string",
          "description": ""
        },
        {
          "name": "etching",
          "type": "string | null",
          "description": ""
        },
        {
          "name": "inscription_count",
          "type": "number",
          "description": ""
        },
        {
          "name": "transaction",
          "type": "Transaction",
          "description": ""
        },
        {
          "name": "txid",
          "type": "string",
          "description": ""
        }
      ],
      "sourceFile": "/Users/gole/Desktop/ord-js/ord-js/src/schemas/transaction.ts"
    }
  ]
}